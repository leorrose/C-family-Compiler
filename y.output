Grammar

    0 $accept: initial $end

    1 initial: program

    2 program: cmd
    3        | program cmd

    4 cmd: function
    5    | procedure

    6 function: FUNCTION VALTYPE ID '(' parameter_list ')' '{' body '}'

    7 procedure: FUNCTION VOID ID '(' parameter_list ')' '{' body '}'

    8 parameter_list: type_list ';' parameter_list
    9               | type_list
   10               | epsilon

   11 type_list: VALTYPE param

   12 param: ID ',' param
   13      | ID

   14 body: declarations nested_statements
   15     | declarations
   16     | nested_statements
   17     | epsilon

   18 declarations: declaration declarations
   19             | declaration
   20             | function declarations
   21             | function
   22             | procedure declarations
   23             | procedure

   24 primitive_val: BOOLVAL
   25              | CHARVAL
   26              | DECIMALINTVAL
   27              | HEXINTVAL
   28              | REALVAL
   29              | NULLP

   30 declaration: primitive_declaration
   31            | STRING string_declaration ';'

   32 primitive_declaration: VAR VALTYPE declaration_parameters ';'

   33 declaration_parameters: ID ',' declaration_parameters
   34                       | primitive_assign ',' declaration_parameters
   35                       | ID
   36                       | primitive_assign

   37 string_declaration: string_parameters ',' string_declaration
   38                   | string_parameters

   39 string_parameters: ID '[' expression ']'
   40                  | ID '[' expression ']' ASS STRINGVAL

   41 nested_statements: stmt
   42                  | stmt nested_statements

   43 stmt: assign ';'
   44     | code_block
   45     | conditions
   46     | loops
   47     | procedure_func_call ';'
   48     | return ';'

   49 assign: primitive_assign
   50       | index_assign
   51       | string_assign
   52       | pointer_assign

   53 primitive_assign: ID ASS expression

   54 index_assign: ID '[' expression ']' ASS expression

   55 string_assign: ID ASS STRINGVAL

   56 pointer_assign: MUL ID ASS expression

   57 code_block: '{' declaration nested_statements '}'
   58           | '{' declaration '}'
   59           | '{' nested_statements '}'
   60           | '{' epsilon '}'

   61 conditions: IF '(' expression ')' stmt
   62           | IF '(' expression ')' stmt ELSE stmt

   63 loops: WHILE '(' expression ')' stmt
   64      | DO code_block WHILE '(' expression ')' ';'
   65      | FOR '(' multi_assign ';' expression ';' update ')' stmt

   66 multi_assign: primitive_assign ',' multi_assign
   67             | primitive_assign

   68 update: ID PLUS PLUS
   69       | ID MINUS MINUS
   70       | multi_assign

   71 procedure_func_call: ID '(' expression_list ')'

   72 expression_list: expression ',' expression_list
   73                | expression
   74                | epsilon

   75 return: RETURN expression

   76 expression: expression PLUS expression
   77           | expression MINUS expression
   78           | expression DIV expression
   79           | expression MUL expression
   80           | expression AND expression
   81           | expression OR expression
   82           | expression EQ expression
   83           | expression NOTEQ expression
   84           | expression G expression
   85           | expression GE expression
   86           | expression L expression
   87           | expression LE expression
   88           | unary_op expression
   89           | primitive_val
   90           | ID
   91           | procedure_func_call
   92           | '|' ID '|'
   93           | '(' expression ')'
   94           | ADDRESS ID
   95           | ADDRESS ID '[' expression ']'

   96 unary_op: PLUS
   97         | MINUS
   98         | NOT

   99 epsilon: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 7 61 62 63 64 65 71 93
')' (41) 6 7 61 62 63 64 65 71 93
',' (44) 12 33 34 37 66 72
';' (59) 8 31 32 43 47 48 64 65
'[' (91) 39 40 54 95
']' (93) 39 40 54 95
'{' (123) 6 7 57 58 59 60
'|' (124) 92
'}' (125) 6 7 57 58 59 60
error (256)
VALTYPE (258) 6 11 32
STRING (259) 31
IF (260) 61 62
ELSE (261) 62
WHILE (262) 63 64
FOR (263) 65
VAR (264) 32
FUNCTION (265) 6 7
RETURN (266) 75
NULLP (267) 29
VOID (268) 7
DO (269) 64
PLUS (270) 68 76 96
MINUS (271) 69 77 97
DIV (272) 78
MUL (273) 56 79
ASS (274) 40 53 54 55 56
AND (275) 80
EQ (276) 82
G (277) 84
GE (278) 85
L (279) 86
LE (280) 87
NOT (281) 98
NOTEQ (282) 83
OR (283) 81
ADDRESS (284) 94 95
BOOLVAL (285) 24
CHARVAL (286) 25
DECIMALINTVAL (287) 26
HEXINTVAL (288) 27
REALVAL (289) 28
STRINGVAL (290) 40 55
ID (291) 6 7 12 13 33 35 39 40 53 54 55 56 68 69 71 90 92 94 95
LOWER_THEN_ELSE (292)
UNARY (293)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
initial (49)
    on left: 1, on right: 0
program (50)
    on left: 2 3, on right: 1 3
cmd (51)
    on left: 4 5, on right: 2 3
function (52)
    on left: 6, on right: 4 20 21
procedure (53)
    on left: 7, on right: 5 22 23
parameter_list (54)
    on left: 8 9 10, on right: 6 7 8
type_list (55)
    on left: 11, on right: 8 9
param (56)
    on left: 12 13, on right: 11 12
body (57)
    on left: 14 15 16 17, on right: 6 7
declarations (58)
    on left: 18 19 20 21 22 23, on right: 14 15 18 20 22
primitive_val (59)
    on left: 24 25 26 27 28 29, on right: 89
declaration (60)
    on left: 30 31, on right: 18 19 57 58
primitive_declaration (61)
    on left: 32, on right: 30
declaration_parameters (62)
    on left: 33 34 35 36, on right: 32 33 34
string_declaration (63)
    on left: 37 38, on right: 31 37
string_parameters (64)
    on left: 39 40, on right: 37 38
nested_statements (65)
    on left: 41 42, on right: 14 16 42 57 59
stmt (66)
    on left: 43 44 45 46 47 48, on right: 41 42 61 62 63 65
assign (67)
    on left: 49 50 51 52, on right: 43
primitive_assign (68)
    on left: 53, on right: 34 36 49 66 67
index_assign (69)
    on left: 54, on right: 50
string_assign (70)
    on left: 55, on right: 51
pointer_assign (71)
    on left: 56, on right: 52
code_block (72)
    on left: 57 58 59 60, on right: 44 64
conditions (73)
    on left: 61 62, on right: 45
loops (74)
    on left: 63 64 65, on right: 46
multi_assign (75)
    on left: 66 67, on right: 65 66 70
update (76)
    on left: 68 69 70, on right: 65
procedure_func_call (77)
    on left: 71, on right: 47 91
expression_list (78)
    on left: 72 73 74, on right: 71 72
return (79)
    on left: 75, on right: 48
expression (80)
    on left: 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
    94 95, on right: 39 40 53 54 56 61 62 63 64 65 72 73 75 76 77 78
    79 80 81 82 83 84 85 86 87 88 93 95
unary_op (81)
    on left: 96 97 98, on right: 88
epsilon (82)
    on left: 99, on right: 10 17 60 74


State 0

    0 $accept: . initial $end

    FUNCTION  shift, and go to state 1

    initial    go to state 2
    program    go to state 3
    cmd        go to state 4
    function   go to state 5
    procedure  go to state 6


State 1

    6 function: FUNCTION . VALTYPE ID '(' parameter_list ')' '{' body '}'
    7 procedure: FUNCTION . VOID ID '(' parameter_list ')' '{' body '}'

    VALTYPE  shift, and go to state 7
    VOID     shift, and go to state 8


State 2

    0 $accept: initial . $end

    $end  shift, and go to state 9


State 3

    1 initial: program .
    3 program: program . cmd

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (initial)

    cmd        go to state 10
    function   go to state 5
    procedure  go to state 6


State 4

    2 program: cmd .

    $default  reduce using rule 2 (program)


State 5

    4 cmd: function .

    $default  reduce using rule 4 (cmd)


State 6

    5 cmd: procedure .

    $default  reduce using rule 5 (cmd)


State 7

    6 function: FUNCTION VALTYPE . ID '(' parameter_list ')' '{' body '}'

    ID  shift, and go to state 11


State 8

    7 procedure: FUNCTION VOID . ID '(' parameter_list ')' '{' body '}'

    ID  shift, and go to state 12


State 9

    0 $accept: initial $end .

    $default  accept


State 10

    3 program: program cmd .

    $default  reduce using rule 3 (program)


State 11

    6 function: FUNCTION VALTYPE ID . '(' parameter_list ')' '{' body '}'

    '('  shift, and go to state 13


State 12

    7 procedure: FUNCTION VOID ID . '(' parameter_list ')' '{' body '}'

    '('  shift, and go to state 14


State 13

    6 function: FUNCTION VALTYPE ID '(' . parameter_list ')' '{' body '}'

    VALTYPE  shift, and go to state 15

    $default  reduce using rule 99 (epsilon)

    parameter_list  go to state 16
    type_list       go to state 17
    epsilon         go to state 18


State 14

    7 procedure: FUNCTION VOID ID '(' . parameter_list ')' '{' body '}'

    VALTYPE  shift, and go to state 15

    $default  reduce using rule 99 (epsilon)

    parameter_list  go to state 19
    type_list       go to state 17
    epsilon         go to state 18


State 15

   11 type_list: VALTYPE . param

    ID  shift, and go to state 20

    param  go to state 21


State 16

    6 function: FUNCTION VALTYPE ID '(' parameter_list . ')' '{' body '}'

    ')'  shift, and go to state 22


State 17

    8 parameter_list: type_list . ';' parameter_list
    9               | type_list .

    ';'  shift, and go to state 23

    $default  reduce using rule 9 (parameter_list)


State 18

   10 parameter_list: epsilon .

    $default  reduce using rule 10 (parameter_list)


State 19

    7 procedure: FUNCTION VOID ID '(' parameter_list . ')' '{' body '}'

    ')'  shift, and go to state 24


State 20

   12 param: ID . ',' param
   13      | ID .

    ','  shift, and go to state 25

    $default  reduce using rule 13 (param)


State 21

   11 type_list: VALTYPE param .

    $default  reduce using rule 11 (type_list)


State 22

    6 function: FUNCTION VALTYPE ID '(' parameter_list ')' . '{' body '}'

    '{'  shift, and go to state 26


State 23

    8 parameter_list: type_list ';' . parameter_list

    VALTYPE  shift, and go to state 15

    $default  reduce using rule 99 (epsilon)

    parameter_list  go to state 27
    type_list       go to state 17
    epsilon         go to state 18


State 24

    7 procedure: FUNCTION VOID ID '(' parameter_list ')' . '{' body '}'

    '{'  shift, and go to state 28


State 25

   12 param: ID ',' . param

    ID  shift, and go to state 20

    param  go to state 29


State 26

    6 function: FUNCTION VALTYPE ID '(' parameter_list ')' '{' . body '}'

    STRING    shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    FOR       shift, and go to state 33
    VAR       shift, and go to state 34
    FUNCTION  shift, and go to state 1
    RETURN    shift, and go to state 35
    DO        shift, and go to state 36
    MUL       shift, and go to state 37
    ID        shift, and go to state 38
    '{'       shift, and go to state 39

    $default  reduce using rule 99 (epsilon)

    function               go to state 40
    procedure              go to state 41
    body                   go to state 42
    declarations           go to state 43
    declaration            go to state 44
    primitive_declaration  go to state 45
    nested_statements      go to state 46
    stmt                   go to state 47
    assign                 go to state 48
    primitive_assign       go to state 49
    index_assign           go to state 50
    string_assign          go to state 51
    pointer_assign         go to state 52
    code_block             go to state 53
    conditions             go to state 54
    loops                  go to state 55
    procedure_func_call    go to state 56
    return                 go to state 57
    epsilon                go to state 58


State 27

    8 parameter_list: type_list ';' parameter_list .

    $default  reduce using rule 8 (parameter_list)


State 28

    7 procedure: FUNCTION VOID ID '(' parameter_list ')' '{' . body '}'

    STRING    shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    FOR       shift, and go to state 33
    VAR       shift, and go to state 34
    FUNCTION  shift, and go to state 1
    RETURN    shift, and go to state 35
    DO        shift, and go to state 36
    MUL       shift, and go to state 37
    ID        shift, and go to state 38
    '{'       shift, and go to state 39

    $default  reduce using rule 99 (epsilon)

    function               go to state 40
    procedure              go to state 41
    body                   go to state 59
    declarations           go to state 43
    declaration            go to state 44
    primitive_declaration  go to state 45
    nested_statements      go to state 46
    stmt                   go to state 47
    assign                 go to state 48
    primitive_assign       go to state 49
    index_assign           go to state 50
    string_assign          go to state 51
    pointer_assign         go to state 52
    code_block             go to state 53
    conditions             go to state 54
    loops                  go to state 55
    procedure_func_call    go to state 56
    return                 go to state 57
    epsilon                go to state 58


State 29

   12 param: ID ',' param .

    $default  reduce using rule 12 (param)


State 30

   31 declaration: STRING . string_declaration ';'

    ID  shift, and go to state 60

    string_declaration  go to state 61
    string_parameters   go to state 62


State 31

   61 conditions: IF . '(' expression ')' stmt
   62           | IF . '(' expression ')' stmt ELSE stmt

    '('  shift, and go to state 63


State 32

   63 loops: WHILE . '(' expression ')' stmt

    '('  shift, and go to state 64


State 33

   65 loops: FOR . '(' multi_assign ';' expression ';' update ')' stmt

    '('  shift, and go to state 65


State 34

   32 primitive_declaration: VAR . VALTYPE declaration_parameters ';'

    VALTYPE  shift, and go to state 66


State 35

   75 return: RETURN . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 82
    unary_op             go to state 83


State 36

   64 loops: DO . code_block WHILE '(' expression ')' ';'

    '{'  shift, and go to state 39

    code_block  go to state 84


State 37

   56 pointer_assign: MUL . ID ASS expression

    ID  shift, and go to state 85


State 38

   53 primitive_assign: ID . ASS expression
   54 index_assign: ID . '[' expression ']' ASS expression
   55 string_assign: ID . ASS STRINGVAL
   71 procedure_func_call: ID . '(' expression_list ')'

    ASS  shift, and go to state 86
    '('  shift, and go to state 87
    '['  shift, and go to state 88


State 39

   57 code_block: '{' . declaration nested_statements '}'
   58           | '{' . declaration '}'
   59           | '{' . nested_statements '}'
   60           | '{' . epsilon '}'

    STRING  shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    FOR     shift, and go to state 33
    VAR     shift, and go to state 34
    RETURN  shift, and go to state 35
    DO      shift, and go to state 36
    MUL     shift, and go to state 37
    ID      shift, and go to state 38
    '{'     shift, and go to state 39

    $default  reduce using rule 99 (epsilon)

    declaration            go to state 89
    primitive_declaration  go to state 45
    nested_statements      go to state 90
    stmt                   go to state 47
    assign                 go to state 48
    primitive_assign       go to state 49
    index_assign           go to state 50
    string_assign          go to state 51
    pointer_assign         go to state 52
    code_block             go to state 53
    conditions             go to state 54
    loops                  go to state 55
    procedure_func_call    go to state 56
    return                 go to state 57
    epsilon                go to state 91


State 40

   20 declarations: function . declarations
   21             | function .

    STRING    shift, and go to state 30
    VAR       shift, and go to state 34
    FUNCTION  shift, and go to state 1

    $default  reduce using rule 21 (declarations)

    function               go to state 40
    procedure              go to state 41
    declarations           go to state 92
    declaration            go to state 44
    primitive_declaration  go to state 45


State 41

   22 declarations: procedure . declarations
   23             | procedure .

    STRING    shift, and go to state 30
    VAR       shift, and go to state 34
    FUNCTION  shift, and go to state 1

    $default  reduce using rule 23 (declarations)

    function               go to state 40
    procedure              go to state 41
    declarations           go to state 93
    declaration            go to state 44
    primitive_declaration  go to state 45


State 42

    6 function: FUNCTION VALTYPE ID '(' parameter_list ')' '{' body . '}'

    '}'  shift, and go to state 94


State 43

   14 body: declarations . nested_statements
   15     | declarations .

    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    FOR     shift, and go to state 33
    RETURN  shift, and go to state 35
    DO      shift, and go to state 36
    MUL     shift, and go to state 37
    ID      shift, and go to state 38
    '{'     shift, and go to state 39

    $default  reduce using rule 15 (body)

    nested_statements    go to state 95
    stmt                 go to state 47
    assign               go to state 48
    primitive_assign     go to state 49
    index_assign         go to state 50
    string_assign        go to state 51
    pointer_assign       go to state 52
    code_block           go to state 53
    conditions           go to state 54
    loops                go to state 55
    procedure_func_call  go to state 56
    return               go to state 57


State 44

   18 declarations: declaration . declarations
   19             | declaration .

    STRING    shift, and go to state 30
    VAR       shift, and go to state 34
    FUNCTION  shift, and go to state 1

    $default  reduce using rule 19 (declarations)

    function               go to state 40
    procedure              go to state 41
    declarations           go to state 96
    declaration            go to state 44
    primitive_declaration  go to state 45


State 45

   30 declaration: primitive_declaration .

    $default  reduce using rule 30 (declaration)


State 46

   16 body: nested_statements .

    $default  reduce using rule 16 (body)


State 47

   41 nested_statements: stmt .
   42                  | stmt . nested_statements

    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    FOR     shift, and go to state 33
    RETURN  shift, and go to state 35
    DO      shift, and go to state 36
    MUL     shift, and go to state 37
    ID      shift, and go to state 38
    '{'     shift, and go to state 39

    $default  reduce using rule 41 (nested_statements)

    nested_statements    go to state 97
    stmt                 go to state 47
    assign               go to state 48
    primitive_assign     go to state 49
    index_assign         go to state 50
    string_assign        go to state 51
    pointer_assign       go to state 52
    code_block           go to state 53
    conditions           go to state 54
    loops                go to state 55
    procedure_func_call  go to state 56
    return               go to state 57


State 48

   43 stmt: assign . ';'

    ';'  shift, and go to state 98


State 49

   49 assign: primitive_assign .

    $default  reduce using rule 49 (assign)


State 50

   50 assign: index_assign .

    $default  reduce using rule 50 (assign)


State 51

   51 assign: string_assign .

    $default  reduce using rule 51 (assign)


State 52

   52 assign: pointer_assign .

    $default  reduce using rule 52 (assign)


State 53

   44 stmt: code_block .

    $default  reduce using rule 44 (stmt)


State 54

   45 stmt: conditions .

    $default  reduce using rule 45 (stmt)


State 55

   46 stmt: loops .

    $default  reduce using rule 46 (stmt)


State 56

   47 stmt: procedure_func_call . ';'

    ';'  shift, and go to state 99


State 57

   48 stmt: return . ';'

    ';'  shift, and go to state 100


State 58

   17 body: epsilon .

    $default  reduce using rule 17 (body)


State 59

    7 procedure: FUNCTION VOID ID '(' parameter_list ')' '{' body . '}'

    '}'  shift, and go to state 101


State 60

   39 string_parameters: ID . '[' expression ']'
   40                  | ID . '[' expression ']' ASS STRINGVAL

    '['  shift, and go to state 102


State 61

   31 declaration: STRING string_declaration . ';'

    ';'  shift, and go to state 103


State 62

   37 string_declaration: string_parameters . ',' string_declaration
   38                   | string_parameters .

    ','  shift, and go to state 104

    $default  reduce using rule 38 (string_declaration)


State 63

   61 conditions: IF '(' . expression ')' stmt
   62           | IF '(' . expression ')' stmt ELSE stmt

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 105
    unary_op             go to state 83


State 64

   63 loops: WHILE '(' . expression ')' stmt

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 106
    unary_op             go to state 83


State 65

   65 loops: FOR '(' . multi_assign ';' expression ';' update ')' stmt

    ID  shift, and go to state 107

    primitive_assign  go to state 108
    multi_assign      go to state 109


State 66

   32 primitive_declaration: VAR VALTYPE . declaration_parameters ';'

    ID  shift, and go to state 110

    declaration_parameters  go to state 111
    primitive_assign        go to state 112


State 67

   29 primitive_val: NULLP .

    $default  reduce using rule 29 (primitive_val)


State 68

   96 unary_op: PLUS .

    $default  reduce using rule 96 (unary_op)


State 69

   97 unary_op: MINUS .

    $default  reduce using rule 97 (unary_op)


State 70

   98 unary_op: NOT .

    $default  reduce using rule 98 (unary_op)


State 71

   94 expression: ADDRESS . ID
   95           | ADDRESS . ID '[' expression ']'

    ID  shift, and go to state 113


State 72

   24 primitive_val: BOOLVAL .

    $default  reduce using rule 24 (primitive_val)


State 73

   25 primitive_val: CHARVAL .

    $default  reduce using rule 25 (primitive_val)


State 74

   26 primitive_val: DECIMALINTVAL .

    $default  reduce using rule 26 (primitive_val)


State 75

   27 primitive_val: HEXINTVAL .

    $default  reduce using rule 27 (primitive_val)


State 76

   28 primitive_val: REALVAL .

    $default  reduce using rule 28 (primitive_val)


State 77

   71 procedure_func_call: ID . '(' expression_list ')'
   90 expression: ID .

    '('  shift, and go to state 87

    $default  reduce using rule 90 (expression)


State 78

   93 expression: '(' . expression ')'

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 114
    unary_op             go to state 83


State 79

   92 expression: '|' . ID '|'

    ID  shift, and go to state 115


State 80

   89 expression: primitive_val .

    $default  reduce using rule 89 (expression)


State 81

   91 expression: procedure_func_call .

    $default  reduce using rule 91 (expression)


State 82

   75 return: RETURN expression .
   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127

    $default  reduce using rule 75 (return)


State 83

   88 expression: unary_op . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 128
    unary_op             go to state 83


State 84

   64 loops: DO code_block . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 129


State 85

   56 pointer_assign: MUL ID . ASS expression

    ASS  shift, and go to state 130


State 86

   53 primitive_assign: ID ASS . expression
   55 string_assign: ID ASS . STRINGVAL

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    STRINGVAL      shift, and go to state 131
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 132
    unary_op             go to state 83


State 87

   71 procedure_func_call: ID '(' . expression_list ')'

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    $default  reduce using rule 99 (epsilon)

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression_list      go to state 133
    expression           go to state 134
    unary_op             go to state 83
    epsilon              go to state 135


State 88

   54 index_assign: ID '[' . expression ']' ASS expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 136
    unary_op             go to state 83


State 89

   57 code_block: '{' declaration . nested_statements '}'
   58           | '{' declaration . '}'

    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    FOR     shift, and go to state 33
    RETURN  shift, and go to state 35
    DO      shift, and go to state 36
    MUL     shift, and go to state 37
    ID      shift, and go to state 38
    '{'     shift, and go to state 39
    '}'     shift, and go to state 137

    nested_statements    go to state 138
    stmt                 go to state 47
    assign               go to state 48
    primitive_assign     go to state 49
    index_assign         go to state 50
    string_assign        go to state 51
    pointer_assign       go to state 52
    code_block           go to state 53
    conditions           go to state 54
    loops                go to state 55
    procedure_func_call  go to state 56
    return               go to state 57


State 90

   59 code_block: '{' nested_statements . '}'

    '}'  shift, and go to state 139


State 91

   60 code_block: '{' epsilon . '}'

    '}'  shift, and go to state 140


State 92

   20 declarations: function declarations .

    $default  reduce using rule 20 (declarations)


State 93

   22 declarations: procedure declarations .

    $default  reduce using rule 22 (declarations)


State 94

    6 function: FUNCTION VALTYPE ID '(' parameter_list ')' '{' body '}' .

    $default  reduce using rule 6 (function)


State 95

   14 body: declarations nested_statements .

    $default  reduce using rule 14 (body)


State 96

   18 declarations: declaration declarations .

    $default  reduce using rule 18 (declarations)


State 97

   42 nested_statements: stmt nested_statements .

    $default  reduce using rule 42 (nested_statements)


State 98

   43 stmt: assign ';' .

    $default  reduce using rule 43 (stmt)


State 99

   47 stmt: procedure_func_call ';' .

    $default  reduce using rule 47 (stmt)


State 100

   48 stmt: return ';' .

    $default  reduce using rule 48 (stmt)


State 101

    7 procedure: FUNCTION VOID ID '(' parameter_list ')' '{' body '}' .

    $default  reduce using rule 7 (procedure)


State 102

   39 string_parameters: ID '[' . expression ']'
   40                  | ID '[' . expression ']' ASS STRINGVAL

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 141
    unary_op             go to state 83


State 103

   31 declaration: STRING string_declaration ';' .

    $default  reduce using rule 31 (declaration)


State 104

   37 string_declaration: string_parameters ',' . string_declaration

    ID  shift, and go to state 60

    string_declaration  go to state 142
    string_parameters   go to state 62


State 105

   61 conditions: IF '(' expression . ')' stmt
   62           | IF '(' expression . ')' stmt ELSE stmt
   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127
    ')'    shift, and go to state 143


State 106

   63 loops: WHILE '(' expression . ')' stmt
   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127
    ')'    shift, and go to state 144


State 107

   53 primitive_assign: ID . ASS expression

    ASS  shift, and go to state 145


State 108

   66 multi_assign: primitive_assign . ',' multi_assign
   67             | primitive_assign .

    ','  shift, and go to state 146

    $default  reduce using rule 67 (multi_assign)


State 109

   65 loops: FOR '(' multi_assign . ';' expression ';' update ')' stmt

    ';'  shift, and go to state 147


State 110

   33 declaration_parameters: ID . ',' declaration_parameters
   35                       | ID .
   53 primitive_assign: ID . ASS expression

    ASS  shift, and go to state 145
    ','  shift, and go to state 148

    $default  reduce using rule 35 (declaration_parameters)


State 111

   32 primitive_declaration: VAR VALTYPE declaration_parameters . ';'

    ';'  shift, and go to state 149


State 112

   34 declaration_parameters: primitive_assign . ',' declaration_parameters
   36                       | primitive_assign .

    ','  shift, and go to state 150

    $default  reduce using rule 36 (declaration_parameters)


State 113

   94 expression: ADDRESS ID .
   95           | ADDRESS ID . '[' expression ']'

    '['  shift, and go to state 151

    $default  reduce using rule 94 (expression)


State 114

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression
   93           | '(' expression . ')'

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127
    ')'    shift, and go to state 152


State 115

   92 expression: '|' ID . '|'

    '|'  shift, and go to state 153


State 116

   76 expression: expression PLUS . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 154
    unary_op             go to state 83


State 117

   77 expression: expression MINUS . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 155
    unary_op             go to state 83


State 118

   78 expression: expression DIV . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 156
    unary_op             go to state 83


State 119

   79 expression: expression MUL . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 157
    unary_op             go to state 83


State 120

   80 expression: expression AND . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 158
    unary_op             go to state 83


State 121

   82 expression: expression EQ . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 159
    unary_op             go to state 83


State 122

   84 expression: expression G . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 160
    unary_op             go to state 83


State 123

   85 expression: expression GE . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 161
    unary_op             go to state 83


State 124

   86 expression: expression L . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 162
    unary_op             go to state 83


State 125

   87 expression: expression LE . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 163
    unary_op             go to state 83


State 126

   83 expression: expression NOTEQ . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 164
    unary_op             go to state 83


State 127

   81 expression: expression OR . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 165
    unary_op             go to state 83


State 128

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression
   88           | unary_op expression .

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127

    $default  reduce using rule 88 (expression)


State 129

   64 loops: DO code_block WHILE . '(' expression ')' ';'

    '('  shift, and go to state 166


State 130

   56 pointer_assign: MUL ID ASS . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 167
    unary_op             go to state 83


State 131

   55 string_assign: ID ASS STRINGVAL .

    $default  reduce using rule 55 (string_assign)


State 132

   53 primitive_assign: ID ASS expression .
   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127

    $default  reduce using rule 53 (primitive_assign)


State 133

   71 procedure_func_call: ID '(' expression_list . ')'

    ')'  shift, and go to state 168


State 134

   72 expression_list: expression . ',' expression_list
   73                | expression .
   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127
    ','    shift, and go to state 169

    $default  reduce using rule 73 (expression_list)


State 135

   74 expression_list: epsilon .

    $default  reduce using rule 74 (expression_list)


State 136

   54 index_assign: ID '[' expression . ']' ASS expression
   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127
    ']'    shift, and go to state 170


State 137

   58 code_block: '{' declaration '}' .

    $default  reduce using rule 58 (code_block)


State 138

   57 code_block: '{' declaration nested_statements . '}'

    '}'  shift, and go to state 171


State 139

   59 code_block: '{' nested_statements '}' .

    $default  reduce using rule 59 (code_block)


State 140

   60 code_block: '{' epsilon '}' .

    $default  reduce using rule 60 (code_block)


State 141

   39 string_parameters: ID '[' expression . ']'
   40                  | ID '[' expression . ']' ASS STRINGVAL
   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127
    ']'    shift, and go to state 172


State 142

   37 string_declaration: string_parameters ',' string_declaration .

    $default  reduce using rule 37 (string_declaration)


State 143

   61 conditions: IF '(' expression ')' . stmt
   62           | IF '(' expression ')' . stmt ELSE stmt

    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    FOR     shift, and go to state 33
    RETURN  shift, and go to state 35
    DO      shift, and go to state 36
    MUL     shift, and go to state 37
    ID      shift, and go to state 38
    '{'     shift, and go to state 39

    stmt                 go to state 173
    assign               go to state 48
    primitive_assign     go to state 49
    index_assign         go to state 50
    string_assign        go to state 51
    pointer_assign       go to state 52
    code_block           go to state 53
    conditions           go to state 54
    loops                go to state 55
    procedure_func_call  go to state 56
    return               go to state 57


State 144

   63 loops: WHILE '(' expression ')' . stmt

    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    FOR     shift, and go to state 33
    RETURN  shift, and go to state 35
    DO      shift, and go to state 36
    MUL     shift, and go to state 37
    ID      shift, and go to state 38
    '{'     shift, and go to state 39

    stmt                 go to state 174
    assign               go to state 48
    primitive_assign     go to state 49
    index_assign         go to state 50
    string_assign        go to state 51
    pointer_assign       go to state 52
    code_block           go to state 53
    conditions           go to state 54
    loops                go to state 55
    procedure_func_call  go to state 56
    return               go to state 57


State 145

   53 primitive_assign: ID ASS . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 132
    unary_op             go to state 83


State 146

   66 multi_assign: primitive_assign ',' . multi_assign

    ID  shift, and go to state 107

    primitive_assign  go to state 108
    multi_assign      go to state 175


State 147

   65 loops: FOR '(' multi_assign ';' . expression ';' update ')' stmt

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 176
    unary_op             go to state 83


State 148

   33 declaration_parameters: ID ',' . declaration_parameters

    ID  shift, and go to state 110

    declaration_parameters  go to state 177
    primitive_assign        go to state 112


State 149

   32 primitive_declaration: VAR VALTYPE declaration_parameters ';' .

    $default  reduce using rule 32 (primitive_declaration)


State 150

   34 declaration_parameters: primitive_assign ',' . declaration_parameters

    ID  shift, and go to state 110

    declaration_parameters  go to state 178
    primitive_assign        go to state 112


State 151

   95 expression: ADDRESS ID '[' . expression ']'

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 179
    unary_op             go to state 83


State 152

   93 expression: '(' expression ')' .

    $default  reduce using rule 93 (expression)


State 153

   92 expression: '|' ID '|' .

    $default  reduce using rule 92 (expression)


State 154

   76 expression: expression . PLUS expression
   76           | expression PLUS expression .
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    DIV  shift, and go to state 118
    MUL  shift, and go to state 119

    $default  reduce using rule 76 (expression)


State 155

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   77           | expression MINUS expression .
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    DIV  shift, and go to state 118
    MUL  shift, and go to state 119

    $default  reduce using rule 77 (expression)


State 156

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   78           | expression DIV expression .
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    $default  reduce using rule 78 (expression)


State 157

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   79           | expression MUL expression .
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    $default  reduce using rule 79 (expression)


State 158

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   80           | expression AND expression .
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127

    $default  reduce using rule 80 (expression)


State 159

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   82           | expression EQ expression .
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125

    $default  reduce using rule 82 (expression)


State 160

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   84           | expression G expression .
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119

    $default  reduce using rule 84 (expression)


State 161

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   85           | expression GE expression .
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119

    $default  reduce using rule 85 (expression)


State 162

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   86           | expression L expression .
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119

    $default  reduce using rule 86 (expression)


State 163

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression
   87           | expression LE expression .

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119

    $default  reduce using rule 87 (expression)


State 164

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   83           | expression NOTEQ expression .
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125

    $default  reduce using rule 83 (expression)


State 165

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   81           | expression OR expression .
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126

    $default  reduce using rule 81 (expression)


State 166

   64 loops: DO code_block WHILE '(' . expression ')' ';'

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 180
    unary_op             go to state 83


State 167

   56 pointer_assign: MUL ID ASS expression .
   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127

    $default  reduce using rule 56 (pointer_assign)


State 168

   71 procedure_func_call: ID '(' expression_list ')' .

    $default  reduce using rule 71 (procedure_func_call)


State 169

   72 expression_list: expression ',' . expression_list

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    $default  reduce using rule 99 (epsilon)

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression_list      go to state 181
    expression           go to state 134
    unary_op             go to state 83
    epsilon              go to state 135


State 170

   54 index_assign: ID '[' expression ']' . ASS expression

    ASS  shift, and go to state 182


State 171

   57 code_block: '{' declaration nested_statements '}' .

    $default  reduce using rule 57 (code_block)


State 172

   39 string_parameters: ID '[' expression ']' .
   40                  | ID '[' expression ']' . ASS STRINGVAL

    ASS  shift, and go to state 183

    $default  reduce using rule 39 (string_parameters)


State 173

   61 conditions: IF '(' expression ')' stmt .
   62           | IF '(' expression ')' stmt . ELSE stmt

    ELSE  shift, and go to state 184

    $default  reduce using rule 61 (conditions)


State 174

   63 loops: WHILE '(' expression ')' stmt .

    $default  reduce using rule 63 (loops)


State 175

   66 multi_assign: primitive_assign ',' multi_assign .

    $default  reduce using rule 66 (multi_assign)


State 176

   65 loops: FOR '(' multi_assign ';' expression . ';' update ')' stmt
   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127
    ';'    shift, and go to state 185


State 177

   33 declaration_parameters: ID ',' declaration_parameters .

    $default  reduce using rule 33 (declaration_parameters)


State 178

   34 declaration_parameters: primitive_assign ',' declaration_parameters .

    $default  reduce using rule 34 (declaration_parameters)


State 179

   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression
   95           | ADDRESS ID '[' expression . ']'

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127
    ']'    shift, and go to state 186


State 180

   64 loops: DO code_block WHILE '(' expression . ')' ';'
   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127
    ')'    shift, and go to state 187


State 181

   72 expression_list: expression ',' expression_list .

    $default  reduce using rule 72 (expression_list)


State 182

   54 index_assign: ID '[' expression ']' ASS . expression

    NULLP          shift, and go to state 67
    PLUS           shift, and go to state 68
    MINUS          shift, and go to state 69
    NOT            shift, and go to state 70
    ADDRESS        shift, and go to state 71
    BOOLVAL        shift, and go to state 72
    CHARVAL        shift, and go to state 73
    DECIMALINTVAL  shift, and go to state 74
    HEXINTVAL      shift, and go to state 75
    REALVAL        shift, and go to state 76
    ID             shift, and go to state 77
    '('            shift, and go to state 78
    '|'            shift, and go to state 79

    primitive_val        go to state 80
    procedure_func_call  go to state 81
    expression           go to state 188
    unary_op             go to state 83


State 183

   40 string_parameters: ID '[' expression ']' ASS . STRINGVAL

    STRINGVAL  shift, and go to state 189


State 184

   62 conditions: IF '(' expression ')' stmt ELSE . stmt

    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    FOR     shift, and go to state 33
    RETURN  shift, and go to state 35
    DO      shift, and go to state 36
    MUL     shift, and go to state 37
    ID      shift, and go to state 38
    '{'     shift, and go to state 39

    stmt                 go to state 190
    assign               go to state 48
    primitive_assign     go to state 49
    index_assign         go to state 50
    string_assign        go to state 51
    pointer_assign       go to state 52
    code_block           go to state 53
    conditions           go to state 54
    loops                go to state 55
    procedure_func_call  go to state 56
    return               go to state 57


State 185

   65 loops: FOR '(' multi_assign ';' expression ';' . update ')' stmt

    ID  shift, and go to state 191

    primitive_assign  go to state 108
    multi_assign      go to state 192
    update            go to state 193


State 186

   95 expression: ADDRESS ID '[' expression ']' .

    $default  reduce using rule 95 (expression)


State 187

   64 loops: DO code_block WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 194


State 188

   54 index_assign: ID '[' expression ']' ASS expression .
   76 expression: expression . PLUS expression
   77           | expression . MINUS expression
   78           | expression . DIV expression
   79           | expression . MUL expression
   80           | expression . AND expression
   81           | expression . OR expression
   82           | expression . EQ expression
   83           | expression . NOTEQ expression
   84           | expression . G expression
   85           | expression . GE expression
   86           | expression . L expression
   87           | expression . LE expression

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    DIV    shift, and go to state 118
    MUL    shift, and go to state 119
    AND    shift, and go to state 120
    EQ     shift, and go to state 121
    G      shift, and go to state 122
    GE     shift, and go to state 123
    L      shift, and go to state 124
    LE     shift, and go to state 125
    NOTEQ  shift, and go to state 126
    OR     shift, and go to state 127

    $default  reduce using rule 54 (index_assign)


State 189

   40 string_parameters: ID '[' expression ']' ASS STRINGVAL .

    $default  reduce using rule 40 (string_parameters)


State 190

   62 conditions: IF '(' expression ')' stmt ELSE stmt .

    $default  reduce using rule 62 (conditions)


State 191

   53 primitive_assign: ID . ASS expression
   68 update: ID . PLUS PLUS
   69       | ID . MINUS MINUS

    PLUS   shift, and go to state 195
    MINUS  shift, and go to state 196
    ASS    shift, and go to state 145


State 192

   70 update: multi_assign .

    $default  reduce using rule 70 (update)


State 193

   65 loops: FOR '(' multi_assign ';' expression ';' update . ')' stmt

    ')'  shift, and go to state 197


State 194

   64 loops: DO code_block WHILE '(' expression ')' ';' .

    $default  reduce using rule 64 (loops)


State 195

   68 update: ID PLUS . PLUS

    PLUS  shift, and go to state 198


State 196

   69 update: ID MINUS . MINUS

    MINUS  shift, and go to state 199


State 197

   65 loops: FOR '(' multi_assign ';' expression ';' update ')' . stmt

    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    FOR     shift, and go to state 33
    RETURN  shift, and go to state 35
    DO      shift, and go to state 36
    MUL     shift, and go to state 37
    ID      shift, and go to state 38
    '{'     shift, and go to state 39

    stmt                 go to state 200
    assign               go to state 48
    primitive_assign     go to state 49
    index_assign         go to state 50
    string_assign        go to state 51
    pointer_assign       go to state 52
    code_block           go to state 53
    conditions           go to state 54
    loops                go to state 55
    procedure_func_call  go to state 56
    return               go to state 57


State 198

   68 update: ID PLUS PLUS .

    $default  reduce using rule 68 (update)


State 199

   69 update: ID MINUS MINUS .

    $default  reduce using rule 69 (update)


State 200

   65 loops: FOR '(' multi_assign ';' expression ';' update ')' stmt .

    $default  reduce using rule 65 (loops)
